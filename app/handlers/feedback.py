from aiogram import F, types, Router
from aiogram.types import CallbackQuery, Message
from app.filters.filters import photo, file
from app.lexicon.lexicon_ru import LEXICON_RU
from app.keyboards.keyboards import calculator_update, meny_admin
from app.models.course.dao import add_course, course_today
from config.config import logger
from app.states.states import FSMCourse, FSMFile, FSMPhoto
from aiogram.fsm.state import default_state
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from config.config import bot

router = Router()


# –ö–Ω–æ–ø–∫–∞ –æ—Ç–∑—ã–≤—ã
@router.callback_query(F.data == 'button_feedback')
async def recall(callback: CallbackQuery):
    try:
        user = callback.from_user.username
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–∑—ã–≤—ã")
        await callback.answer(show_alert=True)
    except:
        logger.critical("–û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ –æ—Ç–∑—ã–≤—ã", exc_info=True)


# –ö–Ω–æ–ø–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
@router.callback_query(F.data == 'instruction')
async def instruction(callback: CallbackQuery):
    try:
        user = callback.from_user.username
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
        logger.debug('–í–æ—à–ª–∏ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é')
        await callback.message.edit_text(
            text=LEXICON_RU["–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"],
            reply_markup=calculator_update,
            parse_mode='MarkdownV2'
        )
        await callback.answer(show_alert=True)
        logger.debug('–í—ã—à–ª–∏ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    except:
        logger.critical("–û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", exc_info=True)


# –ö–Ω–æ–ø–∫–∞ –∫—É—Ä—Å–∫–∞ —é–∞–Ω—è
@router.callback_query(F.data == 'button_rate')
async def course_yan(callback: CallbackQuery):
    try:
        user = callback.from_user.username
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –∫—É—Ä—Å–∞ —é–∞–Ω—è")
        value = await course_today()
        formatted_num = "{}\\.{}".format(
            int(value), int(value * 100) % 100)
        logger.debug('–í–æ—à–ª–∏ –≤ –∫—É—Ä—Å —é–∞–Ω—è')
        await callback.message.edit_text(
            text=f"""–ö—É—Ä—Å —é–∞–Ω—è –∫ —Ä—É–±–ª—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è : *{formatted_num}*\n\n
*–ü–æ—á–µ–º—É —É –Ω–∞—Å —Ç–∞–∫–æ–π –±–æ–ª—å—à–æ–π –∫—É—Ä—Å —é–∞–Ω—è?*üá®üá≥ –ï—Å–ª–∏ –≤—ã –∑–∞–¥–∞–ª–∏—Å—å —Ç–∞–∫–∏–º –≤–æ–ø—Ä–æ—Å–æ–º, –∑–Ω–∞—á–∏—Ç –≤—ã –∑–∞—à–ª–∏ –Ω–∞ —Å–∞–π—Ç [–¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫–∞ –†–§](http://cbr.ru/) –∏ —Å–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –∏ —É–≤–∏–¥–µ–ª–∏, —á—Ç–æ –æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –Ω–∞—à–µ–≥–æ –ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 2 —Ä—É–±–ª—è\(—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –Ω–µ –ø—Ä–∏–≤–æ–¥–∏–º —Ç–æ—á–Ω—ã—Ö —Ü–∏—Ñ—Ä, —Ç\.–∫\. —Å–∏—Ç—É–∞—Ü–∏—è –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\)\n\n
–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –≤—ã—Å–æ–∫–æ–º –∫—É—Ä—Å–µ:\n
‚ùóÔ∏è–í —Ç–µ–∫—É—â–∏—Ö —Ä–µ–∞–ª–∏—è—Ö –Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å –≤–∞–ª—é—Ç—É –¥–∞–∂–µ –±–ª–∏–∑–∫–æ –∫ –∫—É—Ä—Å—É –¶–ë –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ –∫–∞–∫–æ–π —Ü–µ–Ω–µ [–°–±–µ—Ä–±–∞–Ω–∫](http://www.sberbank.ru/ru/quotes/currencies?currency=CNY) –ø—Ä–æ–¥–∞–µ—Ç *—é–∞–Ω—å*\n\n
–û–±—ã—á–Ω–æ —ç—Ç–æ –ø–ª—é—Å 3,5 —Ä—É–±–ª—è –∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É –¶–ë\n\n
–ù–æ –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —é–∞–Ω—å –≤ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–º\(—Ñ–∏–∞—Ç–Ω–æ–º\) –≤–∏–¥–µ \-–¥–∞–ª—å—à–µ –µ–≥–æ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –ö–∏—Ç–∞–π\.–¢—É—Ç —Ç–∞–∫–∂–µ –≤ –∏–≥—Ä—É –≤—Å—Ç—É–ø–∞—é—Ç –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∏ –∏ –∫—É—Ä—Å —Å–∏–ª—å–Ω–æ –≤—ã—Ä–∞—Å—Ç–µ—Ç\. üí¥\n\n
–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —é–∞–Ω—å –Ω–∞ –±—Ä–æ–∫–µ—Ä—Å–∫–æ–º —Å—á–µ—Ç–µ \(–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∏–Ω—å–∫–æ—Ñ\) \- –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Ö –≤—ã–≤–µ—Å—Ç–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Ö–æ—Ç—è–±—ã 20%\.üìà\n\n
–ú—ã —Å–æ–≤–µ—Ä—à–∞–µ–º –¥–µ–Ω—å–≥–∏ —Å –≤–∞–ª—é—Ç–æ–π *"–¥–µ–Ω—å –≤ –¥–µ–Ω—å"* \- –≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏ –Ω–∞–º —Ä—É–±–ª–∏, –º—ã —Å—Ä–∞–∑—É –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–∞–∫–∞–∑ –≤ —é–∞–Ω—è—Ö "–∏–∑ —Å–≤–æ–∏—Ö", —Å—Ä–∞–∑—É –∂–µ –ø–æ–º–µ–Ω—è–ª–∏ –≤–∞—à–∏ —Ä—É–±–ª–∏ –Ω–∞ —é–∞–Ω—å\. –ú—ã –Ω–µ –∑–∞–Ω–∏–º–∞–µ–º—Å—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ–º —Ä—É–±–ª–µ–π –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –ø–∞–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞, —á—Ç–æ–±—ã –Ω–∞ —ç—Ç–æ–º –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å\- —ç—Ç–æ –Ω–µ –Ω–∞—à –±–∏–∑–Ω–µ—Å\. \(—Ç–µ–º–±–æ–ª–µ–µ, —á–∞—â–µ –≤—Å–µ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—Ä–∞—Ç–Ω–æ–µ\)\n\n
–ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –∑–∞–∫—É–ø–∞—Ç—å –≤–∞–ª—é—Ç—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—à–µ–≤–æ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ\.–°–≤–µ—Ä—å—Ç–µ –Ω–∞—à –∫—É—Ä—Å —Å –∫—É—Ä—Å–æ–º —É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ –≤—ã –ø–æ–π–º–µ—Ç–µ, —á—Ç–æ –º—ã –º–æ–ª–æ–¥—Ü—ã, –¥–∞–∂–µ –±–µ–∑ —É—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π\n\n
*–ö–∞–∫–æ–π –±—É–¥–µ—Ç –∫—É—Ä—Å –∑–∞–≤—Ç—Ä–∞?*üí¥üá®üá≥üí¥
–ú—ã –Ω–µ –∑–Ω–∞–µ–º —Ç–∞–∫–∂–µ –∫–∞–∫ –∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ –≤—ã\. –í—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º\(—Ö–æ—Ç—å –Ω–∞ 100—é–∞–Ω–µ–π, —Ö–æ—Ç—å –Ω–∞ 100 000 —é–∞–Ω–µ\) –º—ã —Å–æ–≤–µ—Ç—É–µ–º –Ω–µ –∂–¥–∞—Ç—å –∑–∞–≤—Ç—Ä–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ –∑–∞–≤—Ç—Ä–∞ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ —Ö—É–∂–µ\. –í —Ç–∞–∫–æ–º –º–∏—Ä–µ –∂–∏–≤–µ–º\.\n\n
*–ú—ã –≥–æ—Ç–æ–≤—ã –∫—É–ø–∏—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —é–∞–Ω–µ–π –ø–æ –∫—É—Ä—Å—É –¶–ë*""",
            reply_markup=calculator_update,
            parse_mode='MarkdownV2'
        )
        await callback.answer(show_alert=True)
    except:
        logger.critical("–û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ –∫—É—Ä—Å–∞ —é–∞–Ω—è", exc_info=True)


# –ö–Ω–æ–ø–∫–∞ —Å–∫–∞–º–∞
@router.callback_query(F.data == 'button_skam')
async def skam(callback: CallbackQuery):
    try:
        user = callback.from_user.username
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–∫–∞–º–∞")
        await callback.message.edit_text(
            text=LEXICON_RU["–°–∫–∞–º"],
            reply_markup=calculator_update,
            parse_mode='MarkdownV2'
        )
        await callback.answer(show_alert=True)
    except:
        logger.critical("–û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ —Å–∫–∞–º–∞", exc_info=True)


# –ö–Ω–æ–ø–∫–∞ –ø–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é
@router.callback_query(F.data == 'bot_botton')
async def create_bot(callback: CallbackQuery):
    try:
        user = callback.from_user.username
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞—Ç–µ–ª—å")
        await callback.message.edit_text(
            text=LEXICON_RU["–ó–∞–∫–∞–∑ –±–æ—Ç–∞"],
            reply_markup=calculator_update,
            parse_mode='MarkdownV2'
        )
    except:
        logger.critical("–û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å", exc_info=True)

# –ö–Ω–æ–ø–∫–∞ –ø–æ –≤–æ–ø—Ä–æ—Å—É
@router.callback_query(F.data == 'question_client_botton')
async def create_bot(callback: CallbackQuery):
    try:
        user = callback.from_user.username
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–æ–ø—Ä–æ—Å–∞")
        await callback.message.edit_text(
            text=LEXICON_RU["–í–æ–ø—Ä–æ—Å"],
            reply_markup=calculator_update,
            parse_mode='MarkdownV2'
        )
    except:
        logger.critical("–û—à–∏–±–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ –≤–æ–ø—Ä–æ—Å", exc_info=True)


# # –µ—Ö–æ —Ñ–∞–π–ª
@router.message(file, StateFilter(default_state))
async def echo_file(message: Message, state: FSMContext):
    await message.answer(
        text="–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–∞–π–ª"
    )
    await state.set_state(FSMFile.file)


# —Ñ–∞–π–ª id
@router.message(FSMFile.file)
async def file_id(message: Message, state: FSMContext):
    logger.debug('–í–æ—à–ª–∏ –≤ —Ö–µ–Ω–¥–ª–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ —é–∞–Ω—è', exc_info=True)
    file_id = message.document.file_id
    await message.answer(
        text=file_id
    )


# # –µ—Ö–æ —Ñ–æ—Ç–æ
@router.message(photo, StateFilter(default_state))
async def echo_photo(message: Message, state: FSMContext):
    await message.answer(
        text="–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ"
    )
    await state.set_state(FSMPhoto.photo)


# —Ñ–æ—Ç–æ id
@router.message(FSMPhoto.photo)
async def photo_id(message: Message):
    file_id = message.photo[-1].file_id
    await message.answer(
        text=file_id
    )
